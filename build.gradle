/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'sudnya' at '5/25/15 2:11 PM' with Gradle 2.2.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.2.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'application'

mainClassName = System.getProperty("mainClass")

task execute(type:JavaExec) {
	systemProperties System.getProperties()
			
	if (project.hasProperty('args')) {
		args project.args.split('\\s+')
	}
			
	main = mainClassName
	classpath = sourceSets.main.runtimeClasspath
	maxHeapSize = "4096m"
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile('com.fasterxml.jackson.core:jackson-core:2.4.1.1')
    compile('com.fasterxml.jackson.core:jackson-databind:2.4.1.3')
    compile('com.fasterxml.jackson.datatype:jackson-datatype-joda:2.5.3')
    compile('org.glassfish.jersey.core:jersey-client:2.16')
    compile('org.codehaus.jettison:jettison:1.1')
    compile('org.glassfish.jersey.media:jersey-media-multipart:2.16')
    compile('javax.ws.rs:javax.ws.rs-api:2.0')
    compile('com.wordnik:swagger-annotations:1.5.3-M1')
    compile('org.mockito:mockito-all:1.9.5')
    compile('org.slf4j:slf4j-api:1.7.7')
    compile('org.slf4j:slf4j-log4j12:1.7.5')
    compile('org.apache.httpcomponents:httpclient:4.1.3')
    compile('org.glassfish.jersey.connectors:jersey-apache-connector:2.1')
    //compile('org.glassfish.jersey.core:jersey-common:2.4.1')
    //compile('org.jboss.resteasy:resteasy-client:3.0.2.Final')
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-all:1.9.5'
}

test {
    testLogging {
        events 'started', 'passed'
        testLogging.showStandardStreams = true
    }
}
